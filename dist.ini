name    = Set-CrossProduct-Lazy
author = Stephen R. Scaffidi <sscaffid@akamai.com>
license = Perl_5
copyright_holder = Akamai Technologies
copyright_year   = 2012


;; gather all the files for distribution
[Git::GatherDir]
; exclude these because they're generated by other plugins
exclude_filename = Build.PL
exclude_filename = Makefile.PL
exclude_filename = dist.ini
exclude_filename = weaver.ini


;; use the basic pluginbundle, with some customizations
[@Filter]
-bundle = @Basic
; 'cause it's overridden by Git::GatherDir above
-remove = GatherDir
; 'cause this isn't destined for the CPAN.
;-remove = UploadToCPAN


;; automagically generate boring boilerplate POD, and
;; weave it in with the good stuff. see weaver.ini as well.
[PodWeaver]


;; use the plugins in the git bundle, except the removed ones.
[@Filter]
-bundle = @Git
; don't auto-commit
-remove = Git::Commit
; don't auto-push
-remove = Git::Push
; allow a release even if these files aren't committed
allow_dirty = dist.ini


;;;; While I like semantic versioning, I'm sticking with
;;;;  normal versions for now.
;;[Author::YANICK::NextSemanticVersion]


;; automatically increment the version on release, based on a
;;  previous git tag with a version.
[Git::NextVersion]


;; automagically determine prerequisite modules for the dist
[AutoPrereqs]


;; put info about this dist.ini into META.{yml,json}
[MetaConfig]


;; produce a newer-style META.json
[MetaJSON]


;; validate the META file
[MetaTests]


;; write a Build.PL
[ModuleBuild]


;; add a $DIST var to each package
[PkgDist]


;; add a $VERSION var to each package
[PkgVersion]


;; automatically write pod coverage tests
[PodCoverageTests]


;; automagically write pod syntax tests
[PodSyntaxTests]


;; add version pod section to each module
[PodVersion]


;; add github info to meta if origin points there
[GithubMeta]


;; create a fat-packer archive of the dist
;[FatPacker]
;script = scripts/edctool


;; Add a test to make sure the module compiles
[Test::Compile]


;; Make a markdown version of README to make GitHub happy
[ReadmeMarkdownFromPod]


;; Some generated files *should* be checked in, copy them
;; to the dist root after generating
[CopyFilesFromBuild]
move = README.mkdn
;copy = Makefile.PL
;copy = Build.PL


;; put dist archives into a 'release' directory
[ArchiveRelease]


;;;; These seem to be broken... I need to find an alternative...
;;;; Also, I would like to be able to mix in manual-edits with
;;;;  auto-generated entries. Time to write it myself? :-)
;; create changelog from git commit messages
;;[ChangelogFromGit]
;;[GitFmtChanges]


;; only pretend to cut a release. comment this out
;; when you want to really do it.
[FakeRelease]


